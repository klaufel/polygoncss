//
// Objects: Layout
// --------------------------------------------------

//== Layout...

$o-layout__container

$o-layout__grid-gutter:
$grid-max-width:			1206px !default;
$grid-max-width-inner:		874px !default;

$grid-gutter:				16px !default;
$grid-gutter--sm:			30px !default;
$grid-gutter--md:			$grid-gutter--sm !default;
$grid-gutter--lg:			$grid-gutter--sm !default;

$grid-max-width--sm:			768px - ($grid-gutter--sm/2) !default;
$grid-max-width--md:			992px - ($grid-gutter--md/2) !default;
$grid-max-width--lg:			1146px + ($grid-gutter--lg*2) !default;

$o-layout__max-width:
$o-layout__max-width--sm

.o-container {
	position: relative;
	margin-left: auto;
	margin-right: auto;

	padding-right: $grid-gutter;
	padding-left: $grid-gutter;

	&--intern {
		padding-right: $grid-gutter/2;
		padding-left: $grid-gutter/2;
	}

	&--inner {
		max-width: $grid-max-width-inner;
	}

	@include media-query($breakpoint-sm) {
		max-width: $grid-max-width--sm;
		padding-right: $grid-gutter--sm;
		padding-left: $grid-gutter--sm;
		&--intern {
			padding-right: $grid-gutter--sm/2;
			padding-left: $grid-gutter--sm/2;
		}
	}
	@include media-query($breakpoint-md) {
		max-width: $grid-max-width--md;
	}
	@include media-query($breakpoint-lg) {
		max-width: $grid-max-width--lg;
	}
}


$o-layout__gutter: 10px !default;

.o-layout {
	display: flex;
	flex-wrap: wrap;
	flex-direction: row;
	padding: 0;
	margin-right: -($grid-gutter / 2);
	margin-left: -($grid-gutter / 2);

	&--intern {
		margin-right: inherit;
		margin-left: inherit;
	}

	@include media-query($breakpoint-sm) {
		margin-right: -($grid-gutter--sm / 2);
		margin-left: -($grid-gutter--sm / 2);
		//flex-direction: row;
	}


	&--no-padding {
		padding: 0;
	}

	&--wrap {
		flex-wrap: wrap;
	}

	// Vertically Align Columns
	&--top {
		align-items: flex-start;
	}

	&--bottom {
		align-items: flex-end;
	}

	&--center {
		align-items: center;
	}

	&--stretch {
		align-items: stretch;
	}

	&--baseline {
		align-items: baseline;
	}
}



@function f-flex($f-limit, $f-i) {
	@return (100% / $f-limit) * $f-i;
}


$breakpoint-separator: \@ !default;



@mixin layout-columns() {

	@for $i from 1 through $config-layout-cols {
		&--#{$i} {
			flex: 0 0 $i;
			width: f-flex($config-layout-cols, $i);
			max-width: f-flex($config-layout-cols, $i);
		}
	}

	@each $breakpoint-name, $breakpoint-unit in $breakpoints {
		@include media-query($breakpoint-unit) {
			@for $i from 1 through $config-layout-cols {
				&--#{$i}#{$breakpoint-separator}#{$breakpoint-name} {
					flex: 0 0 $i;
					width: f-flex($config-layout-cols, $i);
					max-width: f-flex($config-layout-cols, $i);
				}
			}
		}
	}

}



.o-col {
	display: block;
	flex: 1 1 auto;
	margin-left: 0;
	max-width: 100%;
	width: 100%;
	font-size: em(14px);
	padding: 0 ($grid-gutter/2);
	position: relative;
	&--top {
		align-self: flex-start;
	}

	&--bottom {
		align-self: flex-end;
	}

	&--center {
		align-self: center;
	}

	&--no-padding {
		padding-top: 0;
		padding-bottom: 0;
	}

	@include layout-columns();

	@include media-query($breakpoint-sm) {
		padding-left: $grid-gutter--sm/2;
		padding-right: $grid-gutter--sm/2;
	}
}
