/* ============================================================
 * Objects: Layout
 * ============================================================
 *
 * Minions ipsum baboiii hana dul sae butt. Uuuhhh jeje
 * tulaliloo daa pepete jiji poulet tikka masala ti aamoo!
 *

 
 */
$s-config__layout--cols: 12;

$grid-gutter:								      10px !default;
$grid-gutter--sm:						  	  30px !default;
$grid-gutter--md:			            $grid-gutter--sm !default;
$grid-gutter--lg:			            $grid-gutter--sm !default;

$grid-max-width:							    1206px !default;
$grid-max-width--sm:			        768px;
$grid-max-width--md:			        992px - ($grid-gutter--md/2) !default;
$grid-max-width--lg:			        1146px + ($grid-gutter--lg*2) !default;

$grid-max-width-inner:				    874px !default;
$grid-max-width-inner--sm:				874px !default;
$grid-max-width-inner--md:				874px + ($grid-gutter--md/2) !default;
$grid-max-width-inner--lg:				1010px + ($grid-gutter--lg*2) !default;

$grid-max-width-tiny:				      768px !default;
$grid-max-width-tiny--sm:		  		768px !default;
$grid-max-width-tiny--md:			  	754px + ($grid-gutter--md/2) !default;
$grid-max-width-tiny--lg:			  	754px + ($grid-gutter--lg*2) !default;















.o-row {
	display: flex;
	flex-wrap: wrap;	
	flex-direction: row;
	//flex-direction: column;
	padding: 0; 
	margin-right: -($grid-gutter / 2);
	margin-left: -($grid-gutter / 2);

	&--intern {
		margin-right: inherit;
		margin-left: inherit;
	}


	@include t-mq('sm') {
		margin-right: -($grid-gutter--sm / 2);
		margin-left: -($grid-gutter--sm / 2);
		//flex-direction: row;
	}

	
	/*&--no-padding {
		padding: 0;

		& > .column {
			padding: 0;
		}
	}*/

	&--wrap {
		flex-wrap: wrap;
	}

	// Vertically Align Columns
	&--top {
		align-items: flex-start;
	}

	&--bottom {
		align-items: flex-end;
	}

	&--center {
		align-items: center;
	}

	&--stretch {
		align-items: stretch;
	}

	&--baseline {
		align-items: baseline;
	}
}



@function f-flex($f-limit, $f-i) {
	@return (100% / $f-limit) * $f-i;
}


$breakpoint-separator: \@ !default;



@mixin layout-columns() {

	@for $i from 1 through $s-config__layout--cols {
		&--#{$i} {
			flex: 0 0 $i;
			width: f-flex($s-config__layout--cols, $i);
			max-width: f-flex($s-config__layout--cols, $i);
		}
	}
	
	@each $breakpoint-name, $breakpoint-unit in $s-breakpoints {
		@include t-mq($breakpoint-name) {
			@for $i from 1 through $s-config__layout--cols {
				&--#{$i}#{$breakpoint-separator}#{$breakpoint-name} {
					flex: 0 0 $i;
					width: f-flex($s-config__layout--cols, $i);
					max-width: f-flex($s-config__layout--cols, $i);
				}
			}
		}
	}
	
}



@mixin layout-columns-offset() {

	@for $i from 1 through $s-config__layout--cols {
		&--offset-#{$i} {
			margin-left: f-flex($s-config__layout--cols, $i);
		}
	}
	
	@each $breakpoint-name, $breakpoint-unit in $s-breakpoints {
		@include t-mq($breakpoint-name) {
			@for $i from 1 through $s-config__layout--cols {
				&--offset-#{$i}#{$breakpoint-separator}#{$breakpoint-name} {
					margin-left: f-flex($s-config__layout--cols, $i);
				}
			}
		}
	}
	
}


.o-col {
	display: block;
	flex: 1 1 auto;
	margin-left: 0;
	max-width: 100%;
	width: 100%;
	font-size: em(14px);
	padding: 0 ($grid-gutter/2);
	position: relative;

	&--top {
		align-self: flex-start;
	}

	&--bottom {
		align-self: flex-end;
	}

	&--center {
		align-self: center;
	}

	&--no-padding {
		padding-top: 0;
		padding-bottom: 0;
	}

	@include layout-columns();

	@include layout-columns-offset();

	@include t-mq('sm') {
		width: auto;
		padding-left: $grid-gutter--sm/2;
		padding-right: $grid-gutter--sm/2;
	}
}